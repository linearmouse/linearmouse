#!/bin/bash

pushd $(dirname "$0") > /dev/null
cd ..
cp Signing.xcconfig{.tpl,}
popd > /dev/null

no_available_code_signing_certificate() {
    echo 'No available code signing certificate. Use ad-hoc certificate.' >&2
    echo 'If you want to use your own certificate, create a signing certificate in Xcode (https://help.apple.com/xcode/mac/current/#/dev154b28f09) and re-run this command.' >&2
    exit 0
}

if [[ -z "$DEVELOPMENT_TEAM" ]]; then
    CN=$(security find-identity -vp codesigning | head -1 | awk -F\" '{ print $2 }')
    if [[ -z "$CN" ]]; then
        no_available_code_signing_certificate
    fi
    echo "Found CN: $CN" >&2
    if [[ -z "$KEYCHAIN_PATH" ]]; then
        KEYCHAIN_PATH=login.keychain
    fi
    echo "KEYCHAIN_PATH: $KEYCHAIN_PATH" >&2
    DEVELOPMENT_TEAM=$(certtool y k="$KEYCHAIN_PATH" | grep "$CN" -A2 | grep OrgUnit | head -1 | awk -F': ' '{ print $2 }')
    if [[ -z "$DEVELOPMENT_TEAM" ]]; then
        no_available_code_signing_certificate
    fi
fi

pushd $(dirname "$0") > /dev/null
cd ..
cp Signing.xcconfig{.tpl,}
sed -i '' "s/DEVELOPMENT_TEAM =/DEVELOPMENT_TEAM = $DEVELOPMENT_TEAM/" Signing.xcconfig
popd > /dev/null

echo "DEVELOPMENT_TEAM is configured to $DEVELOPMENT_TEAM." >&2
